syntax = "proto3";

package auth;

import "user.proto";
import "rpc_signup_user.proto";
import "rpc_signin_user.proto";

import "hotel.proto";
import "rpc_create_hotel.proto";
import "rpc_update_hotel.proto";

import "booking.proto";
import "rpc_create_booking.proto";

//User service
service AuthService {
  rpc SignUpUser(SignUpUserInput) returns (SignUpUserResponse) {}
  rpc SignInUser(SignInUserInput) returns (SignInUserResponse) {}
  rpc RefreshToken(RefreshTokenInput) returns (RefreshTokenResponse) {}
  rpc GetMe(GetMeInput) returns (UserResponse) {}
}

message GetMeInput { string access_token = 1; }
message RefreshTokenInput { string refresh_token = 1; }
message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

// Hotel Service
service HotelService {
  rpc DeleteHotel(HotelRequest) returns (DeleteHotelResponse) {}
  rpc GetHotel(HotelRequest) returns (HotelResponse) {}
  rpc GetHotels(GetHotelsRequest) returns (stream Hotel) {}
  rpc CreateHotel(CreateHotelRequest) returns (HotelResponse) {}
  rpc UpdateHotel(UpdateHotelRequest) returns (HotelResponse) {}
  
}

message GetHotelsRequest {
  int64 page = 1;
  int64 limit = 2;
}

message HotelRequest { string id = 1; }

message DeleteHotelResponse { bool success = 1; }

//Booking Service
service BookingService {
  rpc CancelBooking(BookingRequest) returns (CancelBookingResponse) {}
  rpc CreateBooking(CreateBookingRequest) returns (BookingResponse) {}
  rpc GetBooking(BookingRequest) returns (BookingResponse) {}
  rpc GetBookings(GetBookingsRequest) returns (stream Booking) {} 
}

message GetBookingsRequest {
  int64 page = 1;
  int64 limit = 2;
}

message BookingRequest { string id = 1; }

message CancelBookingResponse { bool success = 1; }